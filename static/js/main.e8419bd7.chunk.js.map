{"version":3,"sources":["components/Card.js","components/Gallery.js","components/NewInput.js","components/Header.js","components/Game.js","App.js","index.js"],"names":["Card","temp","onClick","id","className","alt","src","API_KEY","process","Gallery","sub","randomClick","historial","setHistorial","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","nm","final","localStorage","getItem","checkSub","headers","Authorization","then","res","json","result","total_results","alert","items2","photos","map","u","Object","assign","approved","forEach","item","imagesArr","sort","Math","random","message","tiny","replace","NewInput","gameInput","passingSub","onChange","placeholder","style","marginLeft","type","value","Header","props","setCoupleFound","setMessage","setGameInput","attempts","coupleFound","isVisible","isWon","setIsWon","isWinning","setIsWinning","divOne","divTwo","parentNode","color","Game","setgameInput","subject","setSubjects","setAttempts","counter","setCounter","gridVis","setGridVis","setIsVisible","updateCounter","actual","length","window","location","hash","setItem","reload","setTimeout","document","addEventListener","event","console","log","minusLetter","str","slice","first","second","parseInt","e","target","winnerClass","firstChild","prevState","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e8419bd7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = ({temp, onClick, id}) => {\n    \n    return (\n        <div className='hiddenImages' onClick={onClick}>\n            <img id={id} className='hidden' alt='Game Card'src={temp}/>\n        </div>\n    )\n}\n\nexport default Card\n\n\n","import React, {useState, useEffect} from 'react'\nimport Card from './Card'\nconst API_KEY =`${process.env.REACT_APP_KEY}`\n\nconst Gallery = ({sub, randomClick, historial, setHistorial}) => {\n    \n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    \n\n        \n    const checkSub = (nm) => {\n      let final = localStorage.getItem('repeated')\n      if(nm === ''){\n        setHistorial([...historial, final])\n        return final? final: 'cats'\n        } else {\n          return nm}\n    }\n    \n\n    useEffect(() => {\n\n        fetch(`https://api.pexels.com/v1/search?query=${checkSub(sub)}&per_page=8`,{\n  headers: {\n    Authorization: API_KEY\n  }\n}).then(res => res.json())\n  .then((result) => {\n            if(result.total_results < 8){\n              alert(`There are not enough pictures of <<${sub}>>! \n              But here are some kitties!`)\n            } else {\n    \n            setIsLoaded(true);\n            const items2 = result.photos.map(u => Object.assign({}, u, { approved: true }));\n            items2.forEach(item => item.id = `${item.id}A`)\n            const final = [...result.photos, ...items2]\n            const imagesArr = final.sort(() => (Math.random() > .5) ? 1 : -1)\n            setItems(imagesArr);\n          }},\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        ) \n        // eslint-disable-next-line  \n    }, [sub])\n\n\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className='grid'>\n            {   \n                \n                items && items.map(item => { \n                const temp = item.src.tiny.replace('h=200&w=280', 'h=100&w=100')\n                return <Card id={item.id} onClick={randomClick} temp={temp} key={item.id} />  \n              }) \n            }\n        </div>\n      );\n    }\n  }\n\n  export default Gallery\n","import React from 'react'\n\nconst NewInput = ({gameInput, passingSub, onChange}) => {\n\n    return (\n       <div className='newInput'>\n          <input placeholder='Choose...cats?' \n          style={{marginLeft: '1rem'}} \n          type=\"text\" \n          value={gameInput} \n          onChange= {onChange}/>\n    \n          <button className='playBtn' \n          style={{marginLeft: '1rem'}} \n          onClick={passingSub}\n          >Play!</button>\n          \n      </div>\n    )\n}\n\nexport default NewInput\n","import {useState, useEffect} from 'react'\nconst Header = (props) => {\n    \n    const {setCoupleFound, message, setMessage, \n        setGameInput, attempts, coupleFound, isVisible, \n        isWon, setIsWon} = props\n    \n    const [isWinning, setIsWinning] = useState(false)\n\n    useEffect(()=> {\n        if(coupleFound === 8){\n            setIsWon(true)\n            setIsWinning(true)\n            setGameInput('')\n            setMessage(`You found 8 pairs of cards in ${attempts} attempts!`)\n            setCoupleFound(0)\n            isVisible.divOne.className = 'foundImages'\n            isVisible.divTwo.className = 'foundImages'\n            isVisible.divOne.parentNode.className = 'untouchable'\n            isVisible.divTwo.parentNode.className = 'untouchable'\n          } else if(isWon === false){\n              setIsWinning(false)\n          }\n          // eslint-disable-next-line\n    },[coupleFound, isWon])\n\n    return (\n        <div>\n          <h1>Sirio  Memory Game</h1>\n          <h4 className={isWinning? 'messageVisible':'messageHidden'}>{message}</h4>\n          <div className={!isWinning? 'points':'messageHidden'}>\n          <p className={isWinning? 'messageHidden':'attempts'}> Attempts: {attempts} </p>     \n          <p className={isWinning? 'messageHidden':'couples'}><b style={{color:'#062af8'}}>{message}</b> Couples found: {coupleFound}</p>\n        </div>\n            \n        </div>\n    )\n}\n\nexport default Header\n","import {useEffect, useState} from 'react'\nimport Gallery from './Gallery'\nimport NewInput from './NewInput'\nimport Header from './Header'\n\nconst Game = () => {\n    const [gameInput, setgameInput] = useState('')\n    const [subject, setSubjects] = useState('')\n    const [coupleFound, setCoupleFound] = useState(0)\n    const [attempts, setAttempts] = useState(0)\n    const [counter, setCounter] = useState(0)\n    const [message, setMessage] = useState('')\n    const [isWon, setIsWon] = useState(true)\n    const [gridVis, setGridVis] = useState('messageHidden')\n    const [historial, setHistorial] = useState([])\n    const [isVisible, setIsVisible] = useState({\n        divOne:'',\n        divTwo:''\n      })\n\n    const onChange = (e) => {\n    setgameInput(e.target.value) \n    }\n     \n    const updateCounter = () => {\n      setCounter(0)\n    }\n\n    const checker = (actual) => {\n      if(actual === historial[historial.length -1] && historial.length !== 0){\n        window.location.hash = 'reload';\n        localStorage.setItem('repeated', actual)\n        window.location.reload();\n        \n      } else if(actual === '' && historial.length !== 0){\n        window.location.hash = 'reload';\n        localStorage.setItem('repeated', actual)\n        window.location.reload();\n      }\n    }\n\n    \n    const passingSub = () => {\n      gameInput && setHistorial([...historial, gameInput])\n      checker(gameInput)\n      setSubjects(gameInput)\n      setTimeout(()=> setGridVis('messageVisible'), 700)\n      //setGridVis('messageVisible')\n      setCoupleFound(0)\n      setAttempts(0)\n      setMessage(null)\n      updateCounter()\n      setIsWon(false)\n      setIsVisible({\n        divOne: '',\n        divTwo:''\n      })\n    }  \n\n    useEffect(() => {\n    document.addEventListener(\"DOMContentLoaded\", function(event) { \n      if(window.location.hash === \"#reload\"){\n        let final = localStorage.getItem('repeated')\n        setgameInput(final)\n        console.log('final', final)\n        passingSub()\n        window.location.hash = '';\n        }})\n        // eslint-disable-next-line\n   }, [subject])\n\n\n\n    const minusLetter = (str) => {\n        return str[str.length -1] === 'A'? str.slice(0, -1): str \n    }\n    const first = isVisible.divOne\n    const second = isVisible.divTwo\n\n    const randomClick = (e) => {\n\n        setMessage(null)\n        if(counter === 0 || second !== '') {\n          if(first.className === 'foundImages' && second.className === 'foundImages'){\n            setIsVisible({\n              divOne: '',\n              divTwo: ''\n            })\n          } else if(second && first.className !== 'foundImages'){\n          first.className = 'hidden'\n          second.className = 'hidden'\n          setIsVisible({\n            divOne: '',\n            divTwo: ''\n          })\n          updateCounter()\n        }\n          e.target.firstChild.className = 'images'\n          setCounter(counter+1)\n          setIsVisible(prevState => ({...prevState, divOne: e.target.firstChild\n        }))} else if (counter === 1  && e.target.firstChild.id !== isVisible.divOne.id){ \n          e.target.firstChild.className = 'images'\n          setIsVisible(prevState => ({...prevState, divTwo: e.target.firstChild  \n          }))\n          setCounter(0)\n          setAttempts(attempts + 1)\n      } \n    } \n  \n\n    useEffect(()=> {\n            if(first && second){\n            if(parseInt(minusLetter(first.id)) === parseInt(minusLetter(second.id))){\n            first.className='foundImages'\n            second.className='foundImages'\n            first.parentNode.className = 'untouchable'\n            second.parentNode.className = 'untouchable'\n            setCoupleFound(coupleFound + 1)\n            setMessage('You found a couple!')\n            }}\n\n\n\n        // eslint-disable-next-line\n    },[isVisible, subject])\n\n    return (\n        <div>\n          <Header \n      setIsWon= {setIsWon}\n      isWon={isWon}\n      isVisible={isVisible}\n      setCoupleFound= {setCoupleFound} \n      setAttempts={setAttempts}\n      setMessage={setMessage}\n      updateCounter={updateCounter}\n      setIsVisible={setIsVisible}\n      message={message}\n      attempts={attempts}\n      coupleFound={coupleFound}\n      passingSub={passingSub}\n      setGameInput={setgameInput}\n      setGridVis= {setGridVis}\n      gridVis={gridVis}\n          />\n                    <div className={isWon? 'messageVisible': 'messageHidden'}>\n          <NewInput passingSub={passingSub} onChange={onChange} gameInput={gameInput}/>\n          </div>\n          <div className={gridVis}>\n          <Gallery historial={historial} setHistorial={setHistorial} winnerClass={coupleFound} sub={subject} randomClick={randomClick}/> \n          </div> \n\n        </div>\n    )\n}\n\nexport default Game\n","import './App.css';\nimport Game from './components/Game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}